# 第三代语法
version: '3'                                                   # 指定使用docker-compose第3版本的语法

# 自定义数据卷(服务数据持久化)，位于宿主机/var/lib/docker/volumes内
volumes:                                                       # 定义持久化存储卷
  databasedata:                                                # MySQL数据存储卷，用于持久化数据库数据
  databaseconf:                                                # MySQL配置存储卷，用于持久化数据库配置
  etcddata:                                                    # 添加etcd数据卷

services:                                                      # 定义服务列表
  codemysql:                                                   # MySQL服务配置
    build:                                                     # 构建配置
      context: .                                               # 构建上下文为当前目录
      dockerfile: compose/mysql/Dockerfile                      # 使用的Dockerfile路径
    image: kratos_mysql                                        # 构建后的镜像名称
    container_name: kratos_mysql                               # 容器名称
    restart: always                                            # 容器总是自动重启
    volumes:                                                   # 卷挂载配置
      # 数据挂载
      - databasedata:/var/lib/mysql/                           # 将数据卷挂载到容器的数据目录
      # 配置挂载
      - databaseconf:/etc/mysql/conf.d/                        # 将配置卷挂载到容器的配置目录
    #env_file:                                                 # 环境变量文件（已注释）
    #  - ./.envs/.production/.my
    # 设置数据库密码、创建一个数据库
    environment:                                               # 环境变量配置
      # root 密码
      - "MYSQL_ROOT_PASSWORD=Eisoo.com123"                     # 设置MySQL root用户密码
    command: --init-file /docker-entrypoint-initdb.d/init.sql  # 启动命令，指定初始化SQL文件
    ports:                                                     # 端口映射
      - "3306:3306"                                           # 将容器的3306端口映射到主机的3306端口

  codenginx:                                                   # Nginx服务配置
    build:                                                     # 构建配置
      context: .                                               # 构建上下文为当前目录
      dockerfile: compose/nginx/Dockerfile                      # 使用的Dockerfile路径
    image: kratos_nginx                                        # 构建后的镜像名称
    container_name: kratos_nginx                               # 容器名称
    restart: always                                            # 容器总是自动重启
    # 暴露全端口
    network_mode: host                                         # 使用主机网络模式，直接使用宿主机的网络

  codeetcd:                                                    # etcd服务配置
    build:
      context: .
      dockerfile: compose/etcd/Dockerfile
    image: kratos_etcd
    container_name: kratos_etcd
    restart: always
    volumes:
      - etcddata:/bitnami/etcd                                # 数据持久化
    ports:
      - "2379:2379"                                           # 客户端通信端口
      - "2380:2380"                                           # 集群通信端口
    environment:
      - ETCD_INITIAL_CLUSTER_STATE=new                        # 初始集群状态
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1            # 集群token